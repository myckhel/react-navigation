{"version":3,"sources":["TabBarIcon.tsx"],"names":["React","View","StyleSheet","Badge","TabBarIcon","horizontal","badge","badgeStyle","renderIcon","activityTintColor","focused","style","size","styles","iconHorizontal","iconVertical","icon","color","badgeHorizontal","badgeVertical","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth","flex","marginTop","left","top"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,UAFF,QAMO,cANP;AAQA,OAAOC,KAAP,MAAkB,SAAlB;AAiBA,eAAe,SAASC,UAAT,CAAoB;AACjCC,EAAAA,UADiC;AAEjCC,EAAAA,KAFiC;AAGjCC,EAAAA,UAHiC;AAIjCC,EAAAA,UAJiC;AAKjCC,EAAAA,iBALiC;AAMjCC,EAAAA,OANiC;AAOjCC,EAAAA;AAPiC,CAApB,EAQL;AACR,QAAMC,IAAI,GAAG,EAAb,CADQ,CAGR;AACA;;AACA,sBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACP,UAAU,GAAGQ,MAAM,CAACC,cAAV,GAA2BD,MAAM,CAACE,YAA7C,EAA2DJ,KAA3D;AADT,kBAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACG;AAApB,KACGR,UAAU,CAAC;AACVE,IAAAA,OADU;AAEVE,IAAAA,IAFU;AAGVK,IAAAA,KAAK,EAAER;AAHG,GAAD,CADb,CAHF,eAUE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEH,KAAK,IAAI,IADpB;AAEE,IAAA,KAAK,EAAE,CACLO,MAAM,CAACP,KADF,EAELD,UAAU,GAAGQ,MAAM,CAACK,eAAV,GAA4BL,MAAM,CAACM,aAFxC,EAGLZ,UAHK,CAFT;AAOE,IAAA,IAAI,EAAGK,IAAI,GAAG,CAAR,GAAa;AAPrB,KASGN,KATH,CAVF,CADF;AAwBD;AAED,MAAMO,MAAM,GAAGX,UAAU,CAACkB,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE,UAJN;AAKJC,IAAAA,SAAS,EAAE,QALP;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJC,IAAAA,cAAc,EAAE,QAPZ;AAQJC,IAAAA,MAAM,EAAE,MARJ;AASJC,IAAAA,KAAK,EAAE,MATH;AAUJ;AACAC,IAAAA,QAAQ,EAAE;AAXN,GADyB;AAc/BZ,EAAAA,YAAY,EAAE;AACZa,IAAAA,IAAI,EAAE;AADM,GAdiB;AAiB/Bd,EAAAA,cAAc,EAAE;AACdW,IAAAA,MAAM,EAAE,MADM;AAEdI,IAAAA,SAAS,EAAE;AAFG,GAjBe;AAqB/BvB,EAAAA,KAAK,EAAE;AACLe,IAAAA,QAAQ,EAAE,UADL;AAELS,IAAAA,IAAI,EAAE;AAFD,GArBwB;AAyB/BX,EAAAA,aAAa,EAAE;AACbY,IAAAA,GAAG,EAAE;AADQ,GAzBgB;AA4B/Bb,EAAAA,eAAe,EAAE;AACfa,IAAAA,GAAG,EAAE;AADU;AA5Bc,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport type { Route } from '@react-navigation/native';\nimport Badge from './Badge';\n\ntype Props = {\n  route: Route<string>;\n  horizontal: boolean;\n  badge?: string | number;\n  badgeStyle?: StyleProp<TextStyle>;\n  focused: boolean;\n  activityTintColor: string;\n  renderIcon: (props: {\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default function TabBarIcon({\n  horizontal,\n  badge,\n  badgeStyle,\n  renderIcon,\n  activityTintColor,\n  focused,\n  style,\n}: Props) {\n  const size = 25;\n\n  // We render the icon twice at the same position on top of each other:\n  // active and inactive one, so we can fade between them.\n  return (\n    <View\n      style={[horizontal ? styles.iconHorizontal : styles.iconVertical, style]}\n    >\n      <View style={styles.icon}>\n        {renderIcon({\n          focused,\n          size,\n          color: activityTintColor,\n        })}\n      </View>\n      <Badge\n        visible={badge != null}\n        style={[\n          styles.badge,\n          horizontal ? styles.badgeHorizontal : styles.badgeVertical,\n          badgeStyle,\n        ]}\n        size={(size * 3) / 4}\n      >\n        {badge}\n      </Badge>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3,\n  },\n  badge: {\n    position: 'absolute',\n    left: 3,\n  },\n  badgeVertical: {\n    top: 3,\n  },\n  badgeHorizontal: {\n    top: 7,\n  },\n});\n"]}